<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this template, choose Tools | Templates
and open the template in the editor.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets">
    
package org.conventionsframework.showcase.model;


import org.conventionsframework.model.VersionatedBaseEntityLong;
import java.io.Serializable;
import java.util.Iterator;
import java.util.List;
import javax.persistence.*;
import javax.validation.constraints.Size;
import org.hibernate.validator.constraints.NotEmpty;


/**
 * 
 * @author Rafael M. Pestano
 * @Date Jan 10, 2011
 */
@Entity
@Table(name = "person")
@SequenceGenerator(allocationSize = 1, name = "seq_person", sequenceName = "seq_person")
public class Person extends VersionatedBaseEntityLong implements Serializable{

    private static final long serialVersionUID = -3065107295253073402L;
    private String name;
    private String lastname;
    private Integer age;
    private List&lt;Person&gt; friends;
    private List&lt;Phone&gt; telephones;

    public Person() {
    }

    public Person(String name, String lastname, Integer age) {
        this.name = name;
        this.lastname = lastname;
        this.age = age;
    }
    
    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Size(min=6,max=100,message="Minimum size for name is 6 and maximum size is 100")
    @NotEmpty(message="The name is required")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Size(min=6,max=100,message="Minimum size for lastname is 6 and maximum size is 100")
    @NotEmpty(message="The lastname is required")
    public String getLastname() {
        return lastname;
    }

    public void setLastname(String sobrenome) {
        this.lastname = sobrenome;
    }

    @ManyToMany
    public List&lt;Person&gt; getFriends() {
        return friends;
    }

    public void setFriends(List&lt;Person&gt; friends) {
        this.friends = friends;
    }

    @OneToMany(cascade= CascadeType.ALL)
    public List&lt;Phone&gt; getTelephones() {
        return telephones;
    }

    public void setTelephones(List&lt;Phone&gt; telephones) {
        this.telephones = telephones;
    }
    
    
    @Transient
    public Integer getNumFriends(){
        if(friends != null){
            return friends.size();
        }
        else{
            return 0;
        }
    }

    
    /**
     * used as label in selectItem
     */
    @Override
    @Transient
    public String getLabel() {
        return this.getName();
    }
    

}


</ui:composition>